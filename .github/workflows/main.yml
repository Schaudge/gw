name: gw

on:
  push:
  pull_request:

jobs:
  # mingw:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       sys: [clang64, ucrt64]
  #   name: ${{ matrix.sys }}
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: msys2/setup-msys2@v2
  #       with:
  #         msystem: ${{ matrix.sys }}
  #         update: true
  #         install: make
  #         pacboy: toolchain:p glfw:p skia:p htslib:p freeglut:p glew:p ncurses:p fontconfig:p dlfcn:p libpng:p
  #     - name: build
  #       run: |
  #         make
  #     - name: upload
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: mingw-${{ matrix.sys }}
  #         path: ${{ github.workspace }}/*.exe

  macos-intel:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          brew install fontconfig glfw htslib icu4c wget zlib node graphicsmagick imagemagick
          npm install --global create-dmg

      - name: build
        run: |
          
          git clone --depth 1 https://github.com/ebiggers/libdeflate.git
          cd libdeflate && CFLAGS+=' -fPIC -O3 ' cmake -B build && CFLAGS+=' -fPIC -O3 ' cmake --build build
          cp build/libdeflate.a ../lib && cp libdeflate.h ../include && cd ../
          
          wget -O htslib.tar.bz2 https://github.com/samtools/htslib/releases/download/1.17/htslib-1.17.tar.bz2

          tar -xvf htslib.tar.bz2
          mv htslib-1.17 htslib && rm htslib.tar.bz2
          cd htslib
          ./configure --enable-libcurl --enable-s3 --enable-lzma --enable-bz2 --with-libdeflate
          make -j3
          cp -rf htslib ../include
          cp libhts.a ../lib
          cd ../ && rm -rf libdeflate && rm -rf htslib
          
          wget https://github.com/glfw/glfw/releases/download/3.3.8/glfw-3.3.8.bin.MACOS.zip
          unzip glfw-3.3.8.bin.MACOS.zip
          cp -rf glfw-3.3.8.bin.MACOS/include/* include
          cp glfw-3.3.8.bin.MACOS/lib-x86_64/libglfw3.a lib
          
          ls
          echo "--"
          ls include
          echo "--"
          ls lib
          echo "--"
          
          make prep
          make -j3
        
      - name: package
        run: |
          osacompile -o gw.app deps/gw_applescript_prog.scpt
          mv deps/gw_droplet.icns gw.app/Contents/Resources/droplet.icns
          cp gw gw.app/Contents/MacOS/gw_program
          # ignore code signing error
          create-dmg 'gw.app' --dmg-title='gw-intel.dmg' || true
          mv gw\ undefined.dmg gw-intel.dmg
          
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: macos-latest-intel
          path: ${{ github.workspace }}/gw-intel.dmg
